<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oci.mapper.MaterialTypeMapper">

<resultMap type="MaterialType" id="materialTypeResult">
		<id property="typeId" column="type_id"/>
		<result property="typeName" column="type_name"/>
		<result property="reserve1" column="reserve1"/>
		<result property="reserve2" column="reserve2"/>
		<result property="reserve3" column="reserve3"/>
</resultMap>
<resultMap type="MaterialTypeVo" id="materialTypeVoResult">
		<id property="typeId" column="type_id"/>
		<result property="typeName" column="type_name"/>
		<result property="reserve1" column="reserve1"/>
		<result property="reserve2" column="reserve2"/>
		<result property="reserve3" column="reserve3"/>
</resultMap>

<resultMap type="MTForOtherVo" id="mTForOtherVoResult">
		<id property="typeId" column="type_id"/>
		<result property="typeName" column="type_name"/>
</resultMap>
	
	
	<select id="findAllMaterialTypeVo" resultMap="materialTypeVoResult">
		select * from t_materialtype 
	</select>
	
	<select id="findMaterialTypeVos" parameterType="MaterialTypeSearcher" resultMap="materialTypeVoResult">
		select * from t_materialtype
		<trim prefix="where" prefixOverrides="and | or" suffixOverrides=")">
			<if test="typeName != null">
				 type_name like '%${typeName}%'
			</if>
			<if test="reserve1 != null">
				and reserve1 like '%${reserve1}%'
			</if>
			<if test="reserve2 != null">
				and reserve2 like '%${reserve2}%'
			</if>
			<if test="reserve3 != null">
				and reserve3 like'%${reserve3}%'
			</if>
		</trim>
	</select>
	
	<select id="findMaterialType" parameterType="int" resultMap="materialTypeResult">
		select * from t_materialtype where type_id =#{typeId}
	</select>
	
	<select id="findMaterialTypeVo" parameterType="int" resultMap="materialTypeVoResult">
		select * from t_materialtype where type_id =#{typeId}
	</select>
	
	<select id="findMTForOtherVo" parameterType="int" resultMap="mTForOtherVoResult">
		select * from t_materialtype where type_id =#{typeId}
	</select>
	

	
	<update id="updateMaterialType"	parameterType="MaterialType" >
		update t_materialtype
		<set>
			<if test="typeName!=null">
				type_name=#{typeName},
			</if>
			<if test="reserve1!=null">
				reserve1=#{reserve1},
			</if>
			<if test="reserve2!=null">
				reserve2=#{reserve2},
			</if>
			<if test="reserve3!=null">
				reserve3=#{reserve3}
			</if>
		</set>
		where type_id = #{typeId}
	</update>
	
	<!-- keyProperty="typeId" 这个projectId 需要是MaterialType类的属性 -->
	<insert id="insertMaterialType" parameterType="MaterialType" useGeneratedKeys="true" keyProperty="typeId">
		insert ignore into t_materialtype(type_name,reserve1,reserve2,reserve3) 
		values(#{typeName},#{reserve1},#{reserve2},#{reserve3})
	</insert>
	
	<delete id="deleteMaterialTypes" parameterType="list">
		delete from t_materialtype 
		<where>
			type_id in
			<foreach item="typeId" collection="list" open="(" separator="," close=")">
				#{typeId}
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteMaterialType" parameterType="int">
		delete from t_materialtype where type_id=#{typeId}
	</delete>




</mapper>
