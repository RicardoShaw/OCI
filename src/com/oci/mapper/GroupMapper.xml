<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oci.mapper.GroupMapper">

<!-- CRUD使用 -->
<resultMap type="Group" id="groupResult">
		<id property="groupId" column="group_id"/>
		<result property="groupName" column="name"/>
		<result property="description" column="description"/>
</resultMap>

<!-- 仅用于Select语句 -->
<resultMap type="GroupVo" id="groupVoResult">
		<id property="groupId" column="group_id"/>
		<result property="groupName" column="name"/>
		<result property="description" column="description"/>
		<collection property="roles" column="group_id" select="com.oci.mapper.RoleMapper.findRoleForOtherVoByGroupId"/>
</resultMap>

<resultMap type="GroupForOtherVo" id="groupForOtherVoResult">
		<id property="groupId" column="group_id"/>
		<result property="groupName" column="name"/>
</resultMap>
	
	
	<select id="findAllGroupVo" resultMap="groupVoResult">
		select * from t_group 
	</select>
	
	<select id="findAllGroupForOtherVo" resultMap="groupForOtherVoResult">
		select * from t_group 
	</select>
	
	<select id="findGroupVos" parameterType="GroupSearcher" resultMap="groupVoResult">
		select * from t_group
		<trim prefix="where" prefixOverrides="and | or" suffixOverrides=")">
			<if test=" groupName != null">
				name like '%${groupName}%'
			</if>
			<if test="description != null">
				and description like '%${description}%'
			</if>
		</trim>
	</select>
	
	<select id="findGroupVo" parameterType="int" resultMap="groupVoResult">
		select * from t_group where group_id = #{groupId}
	</select>
	
	<select id="findGroup" parameterType="int" resultMap="groupResult">
		select * from t_group where group_id = #{groupId}
	</select>
	
	<select id="findGroupForOtherVo" parameterType="int" resultMap="groupForOtherVoResult">
		select * from t_group where group_id = #{groupId}
	</select>
	
	
	
	<update id="updateGroup"	parameterType="Group" >
		update t_group
		<set>
			<if test="groupName!=null">
				name = #{groupName},
			</if>
			<if test="description != null">
				description = #{description},
			</if>
		</set>
		where group_id = #{groupId}
	</update>
	
	<!-- keyProperty="groupId" 这个groupId 需要时Role类的属性 -->
	<insert id="insertGroup" parameterType="Group" useGeneratedKeys="true" keyProperty="groupId">
		insert ignore into t_group(name,description,category) values(#{groupName},#{description},#{category})
	</insert>
	
	<delete id="deleteGroups" parameterType="list">
		delete from t_group 
		<where>
			group_id in
			<foreach item="groupId" collection="list" open="(" separator="," close=")">
				#{groupId}
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteGroup" parameterType="int">
		delete from t_group where group_id=#{groupId}
	</delete>




</mapper>
