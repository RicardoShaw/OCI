<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oci.mapper.ProjectMapper">

<resultMap type="Project" id="projectResult">
		<id property="projectId" column="project_id"/>
		<result property="projectTime" column="project_time"/>
		<result property="projectName" column="project_name"/>
		<result property="reserve1" column="reserve1"/>
		<result property="reserve2" column="reserve2"/>
		<result property="reserve3" column="reserve3"/>
</resultMap>
	
<resultMap type="ProjectVo" id="projectVoResult">
		<id property="projectId" column="project_id"/>
		<result property="projectTime" column="project_time"/>
		<result property="projectName" column="project_name"/>
		<result property="reserve1" column="reserve1"/>
		<result property="reserve2" column="reserve2"/>
		<result property="reserve3" column="reserve3"/>
</resultMap>	
	
<resultMap type="ProjectForOtherVo" id="projectForOtherVoResult">
		<id property="projectId" column="project_id"/>
		<result property="projectName" column="project_name"/>
</resultMap>		
	
	
	
	<select id="findAllProjectVo" resultMap="projectVoResult">
		select * from t_project 
	</select>
	
	<select id="findAllProjectForOtherVo" resultMap="projectForOtherVoResult">
		select * from t_project 
	</select>
	
	
	
	<select id="findProjectVos" parameterType="ProjectSearcher" resultMap="projectVoResult">
		select * from t_project
		<trim prefix="where" prefixOverrides="and | or" suffixOverrides=")">
			<if test="projectName != null">
				 project_name like '%${projectName}%'
			</if>
			<if test="reserve1 != null">
				and reserve1 like '%${reserve1}%'
			</if>
			<if test="reserve2 != null">
				and reserve2 like '%${reserve2}%'
			</if>
			<if test="reserve3 != null">
				and reserve3 like '%${reserve3}%'
			</if>
		</trim>
	</select>
	
	<select id="findProject" parameterType="int" resultMap="projectVoResult">
		select * from t_project where project_id =#{projectId}
	</select>
	
	<select id="findProjectVo" parameterType="int" resultMap="projectVoResult">
		select * from t_project where project_id =#{projectId}
	</select>
	
	<select id="findProjectForOtherVo" parameterType="int" resultMap="projectForOtherVoResult">
		select * from t_project where project_id =#{projectId}
	</select>
	

	
	<update id="updateProject"	parameterType="Project" >
		update t_project
		<set>
			<if test="projectName!=null">
				project_name = #{projectName},
			</if>
			<if test="projectTime != null">
				project_time = #{projectTime},
			</if>
			<if test="reserve1 != null">
				reserve1 = #{reserve1},
			</if>
			<if test="reserve2 != null">
				reserve2 = #{reserve2},
			</if>
			<if test="reserve3 != null">
				reserve3 = #{reserve3}
			</if>
		</set>
		where project_id = #{projectId}
	</update>
	
	<!-- keyProperty="projectId" 这个projectId 需要是Project类的属性 -->
	<insert id="insertProject" parameterType="Project" useGeneratedKeys="true" keyProperty="projectId">
		insert ignore into t_project(project_name,project_time,reserve1,reserve2,reserve3) 
		values(#{projectName},#{projectTime},#{reserve1},#{reserve2},#{reserve3})
	</insert>
	
	<delete id="deleteProjects" parameterType="list">
		delete  from t_project 
		<where>
			project_id in
			<foreach item="projectId" collection="list" open="(" separator="," close=")">
				#{projectId}
			</foreach>
		</where>
	</delete>
	
	<delete id="deleteProject" parameterType="int">
		delete from t_project where project_id=#{projectId}
	</delete>




</mapper>
